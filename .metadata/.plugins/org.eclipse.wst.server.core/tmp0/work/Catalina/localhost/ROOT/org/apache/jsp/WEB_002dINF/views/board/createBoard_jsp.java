/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-07 02:42:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class createBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"No-Cache\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"No-Cache\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>게시판 글 등록 페이지</title>\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\".fileDrop\").on(\"dropenter dragover\", function(evt) {\r\n");
      out.write("			evt.preventDefault();\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$(\".fileDrop\").on(\"drop\",function(evt) { \r\n");
      out.write("							\r\n");
      out.write("							evt.preventDefault(); // 이벤트 전파를 막음(drop된 파일이 열리는 것을 방지)\r\n");
      out.write("\r\n");
      out.write("							let files = evt.originalEvent.dataTransfer.files; // 드래그 된 파일을 얻어옴\r\n");
      out.write("							console.log(files[0]);\r\n");
      out.write("\r\n");
      out.write("							let formData = new FormData(); // form 객체 생성\r\n");
      out.write("							formData.append(\"upFiles\", files[0]); // form객체에 파일 첨부\r\n");
      out.write("							let url = '/board/uploadFile'\r\n");
      out.write("							$.ajax({\r\n");
      out.write("										url : url, // ajax와 통신 할 곳\r\n");
      out.write("										data : formData, // 서블릿에 보낼 데이터\r\n");
      out.write("										dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("										type : \"post\", // 통신 방식\r\n");
      out.write("										processData : false, // 전송하는 데이터를 쿼리 스트링 형태로 변환하는지를 결정\r\n");
      out.write("										contentType : false, // 기본값 (application/x-www-form-urlencoded)\r\n");
      out.write("										success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("											console.log(data);\r\n");
      out.write("											let ext = data.substr(data.lastIndexOf('.') + 1).toLowerCase();\r\n");
      out.write("											console.log(ext);\r\n");
      out.write("											let output = '';\r\n");
      out.write("											let isImg = false;\r\n");
      out.write("											let imgAr = [ \"jpg\", \"png\", \"jpeg\", \"gif\" ];\r\n");
      out.write("											for (let i = 0; i < imgAr.length; i++) {\r\n");
      out.write("												if (ext == imgAr[i]) { // 이미지 파일이면\r\n");
      out.write("													output += \"<img src='../resources/uploads\" + data + \"' />\";\r\n");
      out.write("\r\n");
      out.write("													isImg = true;\r\n");
      out.write("													$(\"#upfileNameThumb\").val(data); // 썸네일 이미지 경로\r\n");
      out.write("													let origin1 = data.substring(0,data.lastIndexOf(\"/\") + 1);\r\n");
      out.write("													let origin2 = data.split(\"thumb_\")[1];\r\n");
      out.write("\r\n");
      out.write("													let origin = origin1 + origin2;\r\n");
      out.write("													$(\"#upfileNameOrigin\").val(origin);\r\n");
      out.write("													break;\r\n");
      out.write("												}\r\n");
      out.write("											}\r\n");
      out.write("											if (!isImg) {\r\n");
      out.write("												// 이미지 파일이 아니면\r\n");
      out.write("												output += \"<a href='../resources/uploads\" + data + \"'>\" + data + \"</a>\";\r\n");
      out.write("												$(\"#upfileName\").val(data);\r\n");
      out.write("											}\r\n");
      out.write("\r\n");
      out.write("											output += \"<span id='\" + data + \"' onclick='delFile(this);'>\"\r\n");
      out.write("													+ \"<img src='../resources/images/close.png' width='40px' />\"\r\n");
      out.write("													+ \"</span>\";\r\n");
      out.write("											$(\".fDropList\").html(output);\r\n");
      out.write("\r\n");
      out.write("										},\r\n");
      out.write("										error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("										}\r\n");
      out.write("\r\n");
      out.write("									});\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function delFile(obj) {\r\n");
      out.write("		let origin = $(\"#upfileNameOrigin\").val();\r\n");
      out.write("		let thumb = $(\"#upfileNameThumb\").val();\r\n");
      out.write("		let notImg = $(\"#upfileName\").val();\r\n");
      out.write("\r\n");
      out.write("		let url = '/board/delFile';\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : url, // ajax와 통신 할 곳\r\n");
      out.write("			data : {\r\n");
      out.write("				origin : origin,\r\n");
      out.write("				thumb : thumb,\r\n");
      out.write("				notImg : notImg\r\n");
      out.write("			}, // 서블릿에 보낼 데이터\r\n");
      out.write("			dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("			type : \"post\", // 통신 방식\r\n");
      out.write("\r\n");
      out.write("			success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("				$(\".fDropList\").empty(); // 파일 업로드 리스트 초기화\r\n");
      out.write("				// input type hidden 초기화\r\n");
      out.write("				$(\"#upfileNameOrigin\").val('');\r\n");
      out.write("				$(\"#upfileNameThumb\").val('');\r\n");
      out.write("				$(\"#upfileName\").val('');\r\n");
      out.write("\r\n");
      out.write("			},\r\n");
      out.write("			error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function openArea() {\r\n");
      out.write("		$(\".fileDrop\").show(200);\r\n");
      out.write("	}\r\n");
      out.write("	function closeArea() {\r\n");
      out.write("		$(\".fileDrop\").hide(200);\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write(".fileDrop {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	border: 1px dotted blue;\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*.fileDrop .fileContent {\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin: 10px auto;\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("/* .container { */\r\n");
      out.write("/* 	border: 2px solid gray; */\r\n");
      out.write("/* 	padding: 10px; */\r\n");
      out.write("/* } */\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	response.setHeader("Pragma", "no-cache");
	response.setHeader("Cache-Control", "private, no-store, must-revalidate");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<div class=\"container\" style=\"height: auto; width: auto;\">\r\n");
      out.write("		<!-- 	<div class=\"container\" style=\"border: 1px solid gray; height: auto; width: 30%;\"> -->\r\n");
      out.write("		<h2>분양 등록 페이지</h2>\r\n");
      out.write("		<br>\r\n");
      out.write("\r\n");
      out.write("		<form action=\"/board/createBoard\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\r\n");
      out.write("			<!-- 			<div class=\"form-group\"> -->\r\n");
      out.write("			<!-- 				<label for=\"title\">말머리:</label> <select name=\"category\"> -->\r\n");
      out.write("			<!-- 					<option value=\"free\">주저리주저리</option> -->\r\n");
      out.write("			<!-- 					<option value=\"sale\">판매글</option> -->\r\n");
      out.write("			<!-- 					<option value=\"question\">질문</option> -->\r\n");
      out.write("			<!-- 				</select> -->\r\n");
      out.write("			<!-- 			</div> -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"adoptkind\">품종 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"adoptkind\" name=\"adoptkind\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"gender\">성별 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"gender\" name=\"gender\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"liabilityfee\">책임비 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"liabilityfee\" name=\"liabilityfee\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"writer\">작성자 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"writer\" name=\"writer\"><span\r\n");
      out.write("							id=\"writerError\" class=\"error\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"phone\">연락처 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"phone\" name=\"phone\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"sns\">SNS </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"sns\" name=\"sns\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"adoptarea\">분양 지역 </label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"adoptarea\" name=\"adoptarea\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-sm-4\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"password\">글 비밀번호 </label> <input type=\"password\"\r\n");
      out.write("							class=\"form-control\" id=\"password\" name=\"password\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- 			<div class=\"form-group\"> -->\r\n");
      out.write("			<!-- 				<label for=\"pwd\">수정/삭제 비밀번호 :</label> <input type=\"password\" -->\r\n");
      out.write("			<!-- 					class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" -->\r\n");
      out.write("			<!-- 					name=\"pwd\"><span id=\"pwdError\" class=\"error\"></span> -->\r\n");
      out.write("			<!-- 			</div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"title\">제목:</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"title\" name=\"title\"> <span\r\n");
      out.write("					id=\"titleError\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- 			rows=\"20\" cols=\"150\" -->\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"contents\">내용 :</label>\r\n");
      out.write("				<textarea rows=\"15\"\r\n");
      out.write("					style=\"border: 1px solid gray; height: auto; width: 100%;\"\r\n");
      out.write("					id=\"contents\" name=\"contents\"></textarea>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-default\" onclick=\"openArea();\">사진 업로드</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<!-- 			<div class=\"form-group\"> -->\r\n");
      out.write("				<!-- 				<button type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\" -->\r\n");
      out.write("				<!-- 					data-target=\"#myModal\">사진 업로드</button> -->\r\n");
      out.write("\r\n");
      out.write("				<!-- 				Modal -->\r\n");
      out.write("				<!-- 				<div class=\"modal fade\" id=\"myModal\" role=\"dialog\"> -->\r\n");
      out.write("				<!-- 					<div class=\"modal-dialog\"> -->\r\n");
      out.write("\r\n");
      out.write("				<!-- 						Modal content -->\r\n");
      out.write("				<!-- 						<div class=\"modal-content\"> -->\r\n");
      out.write("				<!-- 							<div class=\"modal-header\"> -->\r\n");
      out.write("				<!-- 								<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button> -->\r\n");
      out.write("				<!-- 								<h4 class=\"modal-title\">사진 업로드</h4> -->\r\n");
      out.write("				<!-- 							</div> -->\r\n");
      out.write("				<!-- 							<div class=\"modal-body\" style=\"height: 400px;\"> -->\r\n");
      out.write("				<!-- 								<div class=\"fileContent\">이 영역에 업로드 할 파일을 드래그 드롭 해 주세요!</div> -->\r\n");
      out.write("				<!-- 								<div class=\"fDropList\"></div> -->\r\n");
      out.write("				<!-- 							</div> -->\r\n");
      out.write("				<!-- 							<div class=\"modal-footer\"> -->\r\n");
      out.write("				<!-- 								<button type=\"button\" class=\"btn btn-default\" -->\r\n");
      out.write("				<!-- 									data-dismiss=\"modal\">Close</button> -->\r\n");
      out.write("				<!-- 							</div> -->\r\n");
      out.write("				<!-- 						</div> -->\r\n");
      out.write("\r\n");
      out.write("				<!-- 					</div> -->\r\n");
      out.write("				<!-- 				</div> -->\r\n");
      out.write("\r\n");
      out.write("				<div class=\"fileDrop\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-default\" onclick=\"closeArea();\" style=\"float: right;\">닫기</button>\r\n");
      out.write("					<div class=\"fileContent\">이 영역에 업로드 할 파일을 드래그 드롭 해 주세요!</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"fDropList\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<input type=\"hidden\" name=\"thumbimage\" id=\"upfileNameThumb\" /> \r\n");
      out.write("			<input type=\"hidden\" name=\"image\" id=\"upfileNameOrigin\" /> \r\n");
      out.write("			<input type=\"hidden\" name=\"notimage\" id=\"upfileName\" />\r\n");
      out.write("\r\n");
      out.write("			<button type=\"submit\" style=\"float:right;\" class=\"btn btn-success\">저장</button>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
