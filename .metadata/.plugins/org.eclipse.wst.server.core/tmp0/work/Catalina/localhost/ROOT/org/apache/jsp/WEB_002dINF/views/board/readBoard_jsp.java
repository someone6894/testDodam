/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-07 07:31:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class readBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/lecture/dodamServer/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dodam/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1630554284453L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"No-Cache\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"No-Cache\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function removeBoard(no) {\r\n");
      out.write("	location.href = '/board/remove?no=' + ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 상세페이지에서 수정 버튼을 누루면 게시글 등록페이지와 같은 update 모달창 띄우기\r\n");
      out.write("function updateBoard(no) {\r\n");
      out.write("	\r\n");
      out.write("	location.href = '/board/updateBoard?no=' + ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 	$(function(){\r\n");
      out.write("// 		// 현재글에 달려있는 모든 댓글을 읽어와서 출력\r\n");
      out.write("// 		viewAllReplies();\r\n");
      out.write("		\r\n");
      out.write("// 		$(\"#writer\").mouseover(function(){\r\n");
      out.write("// 			$(\"#writeInfo\").show(300);\r\n");
      out.write("// 		});\r\n");
      out.write("// 	});\r\n");
      out.write("	\r\n");
      out.write("// 	function calcDate(regdate) {\r\n");
      out.write("// 		let diff = new Date() - regdate // 댓글 단 시간과 현재시간의 차\r\n");
      out.write("// 		let diffSecond = diff / 1000; // 초단위\r\n");
      out.write("// 		if (diffSecond < 60 * 5) return '방금 전';\r\n");
      out.write("// 	 	let diffMinutes = diffSecond / 60; // 분단위\r\n");
      out.write("// 	 	if (diffMinutes < 60) return Math.floor(diffMinutes) + '분전';\r\n");
      out.write("// 	 	return new Date(regdate).toLocaleString();\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function viewAllReplies() {\r\n");
      out.write("// 		let bno = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("// 		let url = '/replies/all/' + bno\r\n");
      out.write("// 		$.ajax({\r\n");
      out.write("// 			url : url, // ajax와 통신 할 곳\r\n");
      out.write("// 			dataType : \"json\", // 수신될 데이터의 타입\r\n");
      out.write("// 			type : \"get\", // 통신 방식\r\n");
      out.write("// 			success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("// 				if (data != null) {\r\n");
      out.write("// 					console.log(data);\r\n");
      out.write("// 					$(\"#replyLst\").empty();\r\n");
      out.write("// 					let output = '<ul class=\"list-group\">'; // 보이는 댓글\r\n");
      out.write("// 					let secoutput = '';\r\n");
      out.write("// 					$.each(data, function(i, e) {\r\n");
      out.write("// 						// ----------------------- 비밀글 템플릿 ---------------------------\r\n");
      out.write("// 						secoutput += '<li id=\"reply' + e.no + '\" class=\"list-group-item\">';\r\n");
      out.write("// 						secoutput += \"<div><img src='../resources/images/lock.PNG' width='15px' />\" +   \r\n");
      out.write("// 						\" 댓글 작성자가 비밀글로 처리한 글입니다 </div>\";\r\n");
      out.write("// 						secoutput += \"</li>\";\r\n");
      out.write("// 						// -------------------------비밀글이 아닌 댓글 템플릿--------------------------------\r\n");
      out.write("// 						let viewoutput = '<li id=\"reply' + e.no + '\" class=\"list-group-item\">';\r\n");
      out.write("// 						viewoutput += \"<div style='float: right; margin-right:10px;'>\" + \r\n");
      out.write("// 							\"<img src='../resources/images/gear.png' width='25px' onclick='showReplyModify(\" + e.no +\");' />\";\r\n");
      out.write("// 						viewoutput += \"<img src='../resources/images/trash.png' width='25px' onclick='showReplyDel(\" + e.no + \")'/></div></div>\";\r\n");
      out.write("// 						viewoutput += '<div>작성자 : <span id=\"replyer' + e.no + '\">' + e.replyer + '</span></div>';\r\n");
      out.write("// 						viewoutput += '<div id=\"orcontent' + e.no  + '\">내용 : ' + e.contents + '</div>';\r\n");
      out.write("						\r\n");
      out.write("// 						if (e.modifydate == null) {  // 수정한 댓글이 아니 라면\r\n");
      out.write("// 							regdate = calcDate(e.registerdate);\r\n");
      out.write("// 						} else {\r\n");
      out.write("// 							regdate = calcDate(e.modifydate); \r\n");
      out.write("// 						}\r\n");
      out.write("// 						viewoutput += \"<div>작성일 : \" + regdate + \"</div>\";\r\n");
      out.write("						\r\n");
      out.write("// 						// ------------------------------------------------------------------\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("// 						let loginUser = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; // 로그인 유저\r\n");
      out.write("// 						let bwriter = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; // 부모글 작성자\r\n");
      out.write("// 						let replyer = e.replyer;  // 댓글 작성자\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("// 						if (e.issecret == 'Y') { // 비밀글 이다\r\n");
      out.write("// 							if (loginUser == '') { // 로그인 하지 않았다\r\n");
      out.write("// 								output += secoutput;\r\n");
      out.write("// 							} else { // 비밀글인데 로그인을 한 경우\r\n");
      out.write("// 								if (loginUser == bwriter || loginUser == replyer) { // 보이는 조건에 해당\r\n");
      out.write("// 									viewoutput += \"<div style='color : red;'><img src='../resources/images/lock.PNG' width='15px' />이 글은 비밀글입니다!</div>\";\r\n");
      out.write("// 									viewoutput += \"</li>\";\r\n");
      out.write("// 									output += viewoutput;\r\n");
      out.write("									\r\n");
      out.write("// 								} else { // 로그인을 했지만 보이는 조건에 맞지 않는 경우\r\n");
      out.write("// 									output += secoutput;\r\n");
      out.write("// 								}\r\n");
      out.write("// 							}\r\n");
      out.write("						\r\n");
      out.write("// 						} else { // 비밀 글이 아님	\r\n");
      out.write("// 							viewoutput += \"</li>\";\r\n");
      out.write("// 							output += viewoutput;\r\n");
      out.write("							\r\n");
      out.write("// 						}\r\n");
      out.write("						\r\n");
      out.write("// 					}); // 반복문 끝\r\n");
      out.write("					\r\n");
      out.write("// 					output += \"</ul>\";\r\n");
      out.write("					\r\n");
      out.write("// 					$(\"#replyLst\").html(output);\r\n");
      out.write("// 				}\r\n");
      out.write("				\r\n");
      out.write("								\r\n");
      out.write("// 			},\r\n");
      out.write("// 			error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("// 			}\r\n");
      out.write("\r\n");
      out.write("// 		}); \r\n");
      out.write("		\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function showReplyDel(no) {\r\n");
      out.write("// 		$(\"#replyRemove\").insertAfter($(\"#reply\" + no));\r\n");
      out.write("// 		$(\"#replyRemove\").show(500);\r\n");
      out.write("		\r\n");
      out.write("// 		let newHidden = document.createElement(\"input\");\r\n");
      out.write("//         newHidden.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("//         newHidden.setAttribute(\"id\", \"rno\");\r\n");
      out.write("//      	document.getElementById(\"replyRemove\").appendChild(newHidden); // 동적으로 태그 객체 삽입\r\n");
      out.write("     	\r\n");
      out.write("//      	$(\"#rno\").val(no);\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function showReplyModify(no) {\r\n");
      out.write("// 		$(\"#replyModify\").insertAfter($(\"#reply\" + no));\r\n");
      out.write("// 		$(\"#replyModify\").show(500);\r\n");
      out.write("// 		//수정할 댓글의 pk를 replyModify에 동적으로 넣어줌\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("// 		let newHidden = document.createElement(\"input\");\r\n");
      out.write("//         newHidden.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("//         newHidden.setAttribute(\"id\", \"no\");\r\n");
      out.write("//      	document.getElementById(\"replyModify\").appendChild(newHidden); // 동적으로 태그 객체 삽입\r\n");
      out.write("        \r\n");
      out.write("// 		$(\"#no\").val(no);\r\n");
      out.write(" 	\r\n");
      out.write("//      	$(\"#replyContentsModify\").val($(\"#orcontent\" + no).html());\r\n");
      out.write("     	\r\n");
      out.write("     	\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function showReply() {\r\n");
      out.write("// 		$(\"#replyDiv\").show(500);\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function addReply() {\r\n");
      out.write("// 		let bno = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("// 		bno = parseInt(bno);\r\n");
      out.write("// 		let writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("// 		let content = $(\"#replyContents\").val();\r\n");
      out.write("// 		let isSecret = 'N';\r\n");
      out.write("// 		if (document.getElementById(\"isSecret\").checked) {\r\n");
      out.write("// 			isSecret = 'Y';\r\n");
      out.write("// 		}\r\n");
      out.write("// 		let url = '/replies';\r\n");
      out.write("		\r\n");
      out.write("// 		let sendData = JSON.stringify({  // json타입의 객체로 보이는 문자열 생성\r\n");
      out.write("// 			bno : bno, replyer : writer, contents : content, issecret : isSecret\r\n");
      out.write("// 		});\r\n");
      out.write("		\r\n");
      out.write("// 		console.log(sendData);\r\n");
      out.write("		\r\n");
      out.write("// 		$.ajax({\r\n");
      out.write("// 			url : url, // ajax와 통신 할 곳\r\n");
      out.write("// 			data : sendData, // 서블릿에 보낼 데이터\r\n");
      out.write("// 			dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("// 			type : \"post\", // 통신 방식\r\n");
      out.write("// 			headers : {\r\n");
      out.write("// 				\"content-type\" : \"application/json\",\r\n");
      out.write("// 				\"X-HTTP-Method-Override\" : \"POST\"\r\n");
      out.write("// 			},\r\n");
      out.write("// 			success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("// 				if (data == \"success\") {\r\n");
      out.write("// 					alert('댓글 등록 완료!');\r\n");
      out.write("// 					viewAllReplies();\r\n");
      out.write("// 				} else if (data == \"fail\") {\r\n");
      out.write("// 					alert('댓글 등록 실패!\\r\\n 문제가 지속되면 상현이한테 연락하세요!');\r\n");
      out.write("// 				}\r\n");
      out.write("								\r\n");
      out.write("// 			},\r\n");
      out.write("// 			error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("// 			}\r\n");
      out.write("\r\n");
      out.write("// 		}); \r\n");
      out.write("		\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function closeRemove() {\r\n");
      out.write("// 		$(\"#replyRemove\").hide();\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function modifyReply() {\r\n");
      out.write("// 		let no = $(\"#no\").val();\r\n");
      out.write("// 		let loginUser = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("// 		if (loginUser == '') {\r\n");
      out.write("// 			alert(\"로그인 하셔야 이용 가능합니다!\");\r\n");
      out.write("// 			location.href='../member/login';\r\n");
      out.write("// 		}\r\n");
      out.write("// 		let replyer = $(\"#replyer\" + no).html();\r\n");
      out.write("// 		if (loginUser != replyer) {\r\n");
      out.write("// 			alert(\"댓글은 작성자만 수정/삭제 가능합니다\");\r\n");
      out.write("// 			$(\"#replyModify\").hide();\r\n");
      out.write("// 			return;\r\n");
      out.write("// 		}\r\n");
      out.write("// 		let contents = $(\"#replyContentsModify\").val();\r\n");
      out.write("		\r\n");
      out.write("// 		let isSecretModify = 'N';\r\n");
      out.write("// 		if (document.getElementById(\"isSecretModify\").checked) {\r\n");
      out.write("// 			isSecretModify = 'Y';\r\n");
      out.write("// 		}\r\n");
      out.write("		\r\n");
      out.write("// 		let url = '/replies/' + no;\r\n");
      out.write("		\r\n");
      out.write("// 		let sendData = JSON.stringify({\r\n");
      out.write("// 			no : no, replyer : replyer, contents : contents, issecret : isSecretModify\r\n");
      out.write("// 		});\r\n");
      out.write("		\r\n");
      out.write("// 		console.log(sendData);\r\n");
      out.write("			\r\n");
      out.write("// 		$.ajax({\r\n");
      out.write("// 			url : url, // ajax와 통신 할 곳\r\n");
      out.write("// 			data : sendData, // 서블릿에 보낼 데이터\r\n");
      out.write("// 			dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("// 			type : \"put\", // 통신 방식\r\n");
      out.write("// 			headers : {\r\n");
      out.write("// 				\"content-type\" : \"application/json\",\r\n");
      out.write("// 				\"X-HTTP-Method-Override\" : \"POST\"\r\n");
      out.write("// 			},\r\n");
      out.write("// 			success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("// 				if (data == \"success\") {\r\n");
      out.write("// 					alert('댓글 수정 완료!');\r\n");
      out.write("// 					viewAllReplies();\r\n");
      out.write("// 				} else if (data == \"fail\") {\r\n");
      out.write("// 					alert('댓글 등록 실패!\\r\\n 문제가 지속되면 상현이한테 연락하세요!');\r\n");
      out.write("// 				}\r\n");
      out.write("								\r\n");
      out.write("// 			},\r\n");
      out.write("// 			error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("// 			}\r\n");
      out.write("\r\n");
      out.write("// 		}); \r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("// 	}\r\n");
      out.write("	\r\n");
      out.write("// 	function removeReply() {\r\n");
      out.write("// 		let no = $(\"#rno\").val();\r\n");
      out.write("		\r\n");
      out.write("// 		let loginUser = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("			\r\n");
      out.write("// 		let replyer = $(\"#replyer\" + no).html();\r\n");
      out.write("// 		if (loginUser != replyer) {\r\n");
      out.write("// 			alert(\"댓글은 작성자만 수정/삭제 가능합니다\");\r\n");
      out.write("// 			location.href = '../member/login';\r\n");
      out.write("// 			$(\"#replyModify\").hide();\r\n");
      out.write("// 			return;\r\n");
      out.write("// 		}\r\n");
      out.write("		\r\n");
      out.write("// 		let url = '/replies/' + no;\r\n");
      out.write("// 		$.ajax({\r\n");
      out.write("// 			url : url, // ajax와 통신 할 곳\r\n");
      out.write("// 			dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("// 			type : \"delete\", // 통신 방식\r\n");
      out.write("// 			headers : {\r\n");
      out.write("// 				\"content-type\" : \"application/json\",\r\n");
      out.write("// 				\"X-HTTP-Method-Override\" : \"POST\"\r\n");
      out.write("// 			},\r\n");
      out.write("// 			success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("// 				if (data == \"success\") {\r\n");
      out.write("// 					alert('댓글 삭제 완료!');\r\n");
      out.write("// 					viewAllReplies();\r\n");
      out.write("// 				} else if (data == \"fail\") {\r\n");
      out.write("// 					alert('댓글 삭제 실패!\\r\\n 문제가 지속되면 상현이한테 연락하세요!');\r\n");
      out.write("// 				}\r\n");
      out.write("								\r\n");
      out.write("// 			},\r\n");
      out.write("// 			error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("// 			}\r\n");
      out.write("\r\n");
      out.write("// 		});\r\n");
      out.write("\r\n");
      out.write("// 	}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("#replyDiv {\r\n");
      out.write("	boarder: 1px dotted #e1bee7;\r\n");
      out.write("	display: none;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	response.setHeader("Pragma", "no-cache");
	response.setHeader("Cache-Control", "private, no-store, must-revalidate");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../template.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../adoptboardmini.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\"\r\n");
      out.write("		style=\"height: 30%; width: 50%; border: 2px gray solid; margin-top: 50px; margin-bottom: 100px; padding: 20px\">\r\n");
      out.write("		<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"adoptkind\">품종 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"adoptkind\" name=\"adoptkind\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.adoptkind }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"gender\">성별 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"gender\" name=\"gender\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.gender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"liabilityfee\">책임비 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"liabilityfee\" name=\"liabilityfee\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.liabilityfee }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"adoptarea\">분양 지역 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"adoptarea\" name=\"adoptarea\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.adoptarea }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"phone\">연락처 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"phone\" name=\"phone\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.phone }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"sns\">SNS </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"sns\" name=\"sns\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.sns }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("						readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"writer\">작성자 </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"writer\" name=\"writer\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly><span id=\"writerError\"\r\n");
      out.write("						class=\"error\"></span>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\">\r\n");
      out.write("				<label for=\"title\">글번호:</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"no\" name=\"no\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("					readonly> <span id='readcount'>조회수 : <span\r\n");
      out.write("					class=\"badge\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.readcnt }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></span> <span id='likeDislike'>\r\n");
      out.write("					좋아요 : <span id='isLikeSpan'></span> <span id=\"likeCount\"\r\n");
      out.write("					class=\"badge\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bookmark }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("				</span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 		<div class=\"form-group\"> -->\r\n");
      out.write("		<!-- 			<label for=\"title\">글번호:</label> <input type=\"text\" -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- 			<div> -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 				<span id='likeDislike'> 좋아요 : <span id='isLikeSpan'></span> <span -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- 				</span> -->\r\n");
      out.write("		<!-- 			</div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 		</div> -->\r\n");
      out.write("		<!-- 		<div class=\"form-group\"> -->\r\n");
      out.write("		<!-- 			<label for=\"title\">제목:</label> <input type=\"text\" -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- 				readonly> -->\r\n");
      out.write("		<!-- 		</div> -->\r\n");
      out.write("\r\n");
      out.write("		<!-- 		<div class=\"form-group\"> -->\r\n");
      out.write("		<!-- 			<label for=\"writer\">작성자 :</label> <input type=\"text\" -->\r\n");
      out.write("		<!-- 				class=\"form-control\" id=\"writer\" name=\"writer\" -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- 				<div id=\"writeInfo\" style=\"display: none;\"> -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- 					<div>쪽지보내기</div> -->\r\n");
      out.write("		<!-- 				</div> -->\r\n");
      out.write("		<!-- 		</div> -->\r\n");
      out.write("\r\n");
      out.write("		<br>\r\n");
      out.write("		<div class=\"form-group\">\r\n");
      out.write("			<label for=\"contents\">내용 :</label>\r\n");
      out.write("			<div>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.contents }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("			<br>\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 게시글 쓴 사람 == 접속한 id 일때 글 수정삭제 권한주기 -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 게시글 누구나 수정 삭제 권한 갖음 test용 -->\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-success\"\r\n");
      out.write("			onclick=\"updateBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\">수정</button>\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\"\r\n");
      out.write("				data-target=\"#myModal2\">글 수정테스트</button>\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-warning\"\r\n");
      out.write("			onclick=\"removeBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\">삭제</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 상세페이지에서 목록으로.. -->\r\n");
      out.write("		<button type=\"button\" class=\"btn btn-info\" style=\"float: right;\"\r\n");
      out.write("			onclick=\"location.href='/board/listAll?pageNo=1'\">목록으로</button>\r\n");
      out.write("\r\n");
      out.write("		<!-- 상세페이지 수정용 업데이트 모달창 -->\r\n");
      out.write("		<!-- Modal -->\r\n");
      out.write("		<div class=\"modal fade\" id=\"myModal2\" role=\"dialog\">\r\n");
      out.write("			<div class=\"modal-dialog\">\r\n");
      out.write("\r\n");
      out.write("				<!-- Modal content-->\r\n");
      out.write("				<div class=\"modal-content\">\r\n");
      out.write("					<div class=\"modal-body\" style=\"height: 100%;\">\r\n");
      out.write("						<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("						");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "updateBoard.jsp", out, false);
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 댓글처리 -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div id=\"replyDiv\" style=\"clear: both;\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<div class=\"checkbox\">\r\n");
      out.write("					<label><input type=\"checkbox\" id=\"isSecret\">비밀글로 등록</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<label for=\"replyContents\">댓글 내용:</label>\r\n");
      out.write("				<textarea id=\"replyContents\" rows=\"6\" cols=\"150\"></textarea>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-danger\" onclick=\"addReply();\">댓글등록</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"replyLst\"></div>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"replyModify\" style=\"display: none;\">\r\n");
      out.write("			<div>댓글 수정</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<div class=\"checkbox\">\r\n");
      out.write("					<label><input type=\"checkbox\" id=\"isSecretModify\">비밀글로\r\n");
      out.write("						등록</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<label for=\"replyContents\">댓글 내용:</label>\r\n");
      out.write("				<textarea id=\"replyContentsModify\" rows=\"6\" cols=\"150\"></textarea>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-danger\"\r\n");
      out.write("					onclick=\"modifyReply();\">댓글수정</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"replyRemove\" style=\"display: none;\">\r\n");
      out.write("			<div>댓글 삭제</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				정말로 진심으로 진짜로 삭제 할까요? (삭제된 댓글은 복구가 불가능 합니다!)\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-info\" onclick=\"closeRemove();\">취소</button>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-danger\"\r\n");
      out.write("					onclick=\"removeReply();\">댓글삭제</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 댓글처리끝 -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/board/readBoard.jsp(432,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.image == '' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/board/readBoard.jsp(434,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.image != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<img src=\"../resources/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.image }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" width=\"500px\"\r\n");
          out.write("						height=\"500px\" />\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/board/readBoard.jsp(438,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.notimage != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<a href='../resources/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.notimage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.notimage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/readBoard.jsp(447,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer == loginMember.userid }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<button type=\"button\" class=\"btn btn-success\">수정</button>\r\n");
          out.write("			<button type=\"button\" class=\"btn btn-warning\"\r\n");
          out.write("				onclick=\"/board/remove?no=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">삭제</button>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/board/readBoard.jsp(497,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.userid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<button type=\"button\" class=\"btn btn-danger\" onclick=\"showReply();\">댓글달기</button>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
