/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-07 03:08:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/lecture/dodamServer/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dodam/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1630554284453L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Dodam Dodam</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("	\r\n");
      out.write("	$(\"#email\").keyup( function(){\r\n");
      out.write("		let email = $(this).val();\r\n");
      out.write("		emailCheck(email);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function idCheck(userid) {\r\n");
      out.write("    \r\n");
      out.write("    if(userid.length >= 6 && userid.length <= 12){\r\n");
      out.write("    	document.getElementById(\"iderror\").innerHTML =\"\";\r\n");
      out.write("    	return true;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    if (userid == \"\") {\r\n");
      out.write("        document.getElementById(\"iderror\").innerHTML = \"아이디는 필수 항목입니다.\";\r\n");
      out.write("		return false;\r\n");
      out.write("    } else if (userid.length < 6 || userid.length > 12) {\r\n");
      out.write("        document.getElementById(\"iderror\").innerHTML = \"아이디는 6자 이상 12자 이하로 입력해주세요.\";\r\n");
      out.write("        return false;\r\n");
      out.write("    } \r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function pwdCheck(password, password2) {\r\n");
      out.write("    // 검증 ok : true, 검증 실패 : false \r\n");
      out.write("    let result = false; \r\n");
      out.write("    if (password == \"\") {\r\n");
      out.write("        document.getElementById(\"pwderror\").innerHTML = \"비밀번호는 필수 항목입니다.\";\r\n");
      out.write("    } else if (password.length < 8 || password.length > 12) {\r\n");
      out.write("        document.getElementById(\"pwderror\").innerHTML = \"비밀번호는 8자 이상 12자 이하로 입력해 주세요\";\r\n");
      out.write("    } else if (password != password2) {\r\n");
      out.write("        document.getElementById(\"pwderror\").innerHTML = \"비밀번호가 서로 맞지 않습니다.\";\r\n");
      out.write("        document.getElementById(\"password2\").value = \"\";\r\n");
      out.write("    } else {\r\n");
      out.write("    	document.getElementById(\"pwderror\").innerHTML =\"\";\r\n");
      out.write("        result = true;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    console.log(password);\r\n");
      out.write("    console.log(password2);\r\n");
      out.write("	console.log(result);\r\n");
      out.write("    return result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//이름 필수 체크\r\n");
      out.write("function nameCheck(name) {\r\n");
      out.write("    let result = false;\r\n");
      out.write("    if (name == \"\") {\r\n");
      out.write("        document.getElementById(\"nameerror\").innerHTML = \"이름은 필수 입니다.\";\r\n");
      out.write("    } else {\r\n");
      out.write("        document.getElementById(\"nameerror\").innerHTML = \"\";\r\n");
      out.write("        result = true;\r\n");
      out.write("    }\r\n");
      out.write("    return result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 별명 필수 체크\r\n");
      out.write("function nicknameCheck(nickname) {\r\n");
      out.write("	console.log(\"nickname : \" + nickname);\r\n");
      out.write("    let result = false;\r\n");
      out.write("    if (nickname == \"\") {\r\n");
      out.write("        document.getElementById(\"nicknameerror\").innerHTML = \"별명을 입력해주세요.\";\r\n");
      out.write("    } else {\r\n");
      out.write("        document.getElementById(\"nicknameerror\").innerHTML = \"\";\r\n");
      out.write("        result = true;\r\n");
      out.write("    }\r\n");
      out.write("    return result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//전화번호체크\r\n");
      out.write("function phoneCheck(phone) {\r\n");
      out.write("	console.log(\"phone : \"+ phone);\r\n");
      out.write("    let result = false;\r\n");
      out.write("    if (phone.length > 0) {\r\n");
      out.write("        let regExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n");
      out.write("        console.log(\"regExp : \" + regExp);\r\n");
      out.write("        if (phone.match(regExp) != null) {\r\n");
      out.write("            // 전화번호 형식\r\n");
      out.write("            result = true;\r\n");
      out.write("            document.getElementById(\"phoneerror\").innerHTML = \"\";\r\n");
      out.write("        } else if (phone.match(regExp) == null){\r\n");
      out.write("            document.getElementById(\"phoneerror\").innerHTML = \"휴대폰 번호 형식이 아닙니다2.\";\r\n");
      out.write("            document.getElementById(\"phone\").focus();\r\n");
      out.write("        }\r\n");
      out.write("	console.log(\"phone.match(regExp) : \" + phone.match(regExp));\r\n");
      out.write("    } else {\r\n");
      out.write("    	document.getElementById(\"phoneerror\").innerHTML = \"휴대폰 번호를 입력해주세요2.\";\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("	console.log(\"phone_result : \" + result);\r\n");
      out.write("    return result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//이메일체크\r\n");
      out.write("function emailCheck(email) {\r\n");
      out.write("  let result = false;\r\n");
      out.write("  if (email.length > 0) {\r\n");
      out.write("      let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("		console.log(email);\r\n");
      out.write("      if (email.match(regExp) != null) {\r\n");
      out.write("          // 이메일 주소 형식이다.\r\n");
      out.write("          result = true;\r\n");
      out.write("          document.getElementById(\"emailerror\").innerHTML = \"\";\r\n");
      out.write("          $('#confirmEmail').show();\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("      } else {\r\n");
      out.write("          document.getElementById(\"emailerror\").innerHTML = \"이메일 주소 형식이 아닙니다\";\r\n");
      out.write("      }\r\n");
      out.write("  } else {\r\n");
      out.write("	  document.getElementById(\"emailerror\").innerHTML = \"이메일을 입력해주세요.\";\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  return result;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function sendMailCode () {\r\n");
      out.write("	 \r\n");
      out.write("	let inputEmail = $(\"#email\").val();\r\n");
      out.write("	console.log(\"email2 : \" + inputEmail);\r\n");
      out.write("	\r\n");
      out.write("// 	let url = \"sendMail.do\";\r\n");
      out.write("	let url = \"mailCheck.do\";\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url : url, // ajax와 통신 할 곳\r\n");
      out.write("		data : {email : inputEmail},  // 서블릿에 보낼 데이터\r\n");
      out.write("		dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("		type : \"get\", // 통신 방식\r\n");
      out.write("		success : function (data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("			console.log(\"받아온 data : \" + data);\r\n");
      out.write("		\r\n");
      out.write("			if(data == \"success\"){\r\n");
      out.write("				alert(\"메일 발송 완료\");\r\n");
      out.write("			} else if (data == \"fail\") {\r\n");
      out.write("				alert(\"메일 발송 실패\\r\\n 잠시 후 다시 시도 해 보세요\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			}, error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("let emailCheckBoolean = false;\r\n");
      out.write("function confirmEmailCode(){\r\n");
      out.write("//		let codeInSession = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.confirmCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; // 이렇게하면 코드 노출돼서 안됨\r\n");
      out.write("\r\n");
      out.write("	let userCode = $(\"#emailConfrimCode\").val();\r\n");
      out.write("	let url = 'getConfirmCode.do';\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url : url, // ajax와 통신 할 곳\r\n");
      out.write("		data : {userCode : userCode},  // 서블릿에 보낼 데이터\r\n");
      out.write("		dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("		type : \"get\", // 통신 방식\r\n");
      out.write("		success : function (data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("			console.log(\"data : \" + data);\r\n");
      out.write("			console.log(\"$('#emailConfrimCode').val() : \" + $(\"#emailConfrimCode\").val());\r\n");
      out.write("			if(data == $(\"#emailConfrimCode\").val() ){\r\n");
      out.write("				$(\"#emailError\").html(\"이메일 인증에 성공했습니다\");\r\n");
      out.write("				console.log(\"이메일 인증에 성공했습니다\");\r\n");
      out.write("				 emailCheckBoolean = true;\r\n");
      out.write("				$(\"#email\").attr(\"readonly\",\"readonly\");\r\n");
      out.write("			} else if( data == \"fail\" ){\r\n");
      out.write("				$(\"#emailError\").html(\"이메일 인증에 실패했습니다\");\r\n");
      out.write("				console.log(\"이메일 인증에 실패했습니다\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}, error : function() { // 통신 실패시 수행될 콜백 함수\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//전체 유효성 검사, 전체가 다 유효성검사 통과되야 submit되게\r\n");
      out.write("function validate() {\r\n");
      out.write("    let isCheckOk = false; \r\n");
      out.write("//     let isCheckOk = true; \r\n");
      out.write("    \r\n");
      out.write("	\r\n");
      out.write("    let userid = document.getElementById(\"userid\").value.toLowerCase();\r\n");
      out.write("    let idCheckResult = idCheck(userid);\r\n");
      out.write("    \r\n");
      out.write("    console.log(userid);\r\n");
      out.write("    console.log(idCheckResult);\r\n");
      out.write("    \r\n");
      out.write("    let password = document.getElementById(\"password\").value;\r\n");
      out.write("    let password2 = document.getElementById(\"password2\").value;\r\n");
      out.write("    let pwdCheckResult = pwdCheck(password, password2);\r\n");
      out.write("\r\n");
      out.write("    let name = document.getElementById(\"name\").value;\r\n");
      out.write("    let nameCheckResult = nameCheck(name);\r\n");
      out.write("    if (nameCheckResult) {\r\n");
      out.write("        name = name.replace(/\\s/gi, \"\"); \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    let nickname = document.getElementById(\"nickname\").value;\r\n");
      out.write("    let nicknameCheckResult = nicknameCheck(nickname);\r\n");
      out.write("    if (nicknameCheckResult) {\r\n");
      out.write("        nickname = nickname.replace(/\\s/gi, \"\"); \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    let phone = document.getElementById(\"phone\").value;\r\n");
      out.write("    let phoneCheckResult = phoneCheck(phone);\r\n");
      out.write("    console.log(\"phoneCheckResult : \" + phoneCheckResult);\r\n");
      out.write("    \r\n");
      out.write("	console.log(\"emailCheckBoolean : \" + emailCheckBoolean);\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    if (idCheckResult && pwdCheckResult && nameCheckResult && nicknameCheckResult && phoneCheckResult && emailCheckBoolean ) {\r\n");
      out.write("    		\r\n");
      out.write("    	isCheckOk  = true;\r\n");
      out.write("    	console.log(\"everthing's checked ok!\");\r\n");
      out.write("    	alert(\"도담의 회원으로 가입을 축하드립니다!\");\r\n");
      out.write("    		\r\n");
      out.write("    } else {\r\n");
      out.write("    	console.log(\"Checking's not finished.\");\r\n");
      out.write("    	alert(\"정보 입력을 완료해주세요.\");\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    return isCheckOk;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("#register {\r\n");
      out.write("	width: 300px;\r\n");
      out.write("/* 	margin-top: 10px; */\r\n");
      out.write("/* 	margin-left: 500px; */\r\n");
      out.write("	margin : 0 auto;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border: 3px solid gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error {\r\n");
      out.write("	color: red;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../template.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\" id='register' style=\"width: 500px;\">\r\n");
      out.write("		<h3>회 원 가 입</h3>\r\n");
      out.write("		<h6 style=\"color: red\">* 필수항목</h6>\r\n");
      out.write("		<form action=\"registerMember.do\" method=\"POST\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"userid\">*아이디:</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"userid\" placeholder=\"Enter ID\"\r\n");
      out.write("					name=\"userid\"> <span id=\"iderror\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"password\">*비밀번호 :</label> <input type=\"password\"\r\n");
      out.write("					class=\"form-control\" id=\"password\" placeholder=\"Enter password\"\r\n");
      out.write("					name=\"password\"><span id=\"pwderror\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"password2\">*비밀번호 확인 :</label> <input type=\"password\"\r\n");
      out.write("					class=\"form-control\" id=\"password2\" placeholder=\"Enter password\">\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"name\">*이름 :</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"name\" placeholder=\"Enter Name\" name=\"name\"><span\r\n");
      out.write("					id=\"nameerror\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"nickname\">별명 :</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"nickname\" placeholder=\"Enter NickName\" name=\"nickname\"><span\r\n");
      out.write("					id=\"nicknameerror\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"phone\">*휴대폰 번호 :</label> <input type=\"text\"\r\n");
      out.write("					class=\"form-control\" id=\"phone\" placeholder=\"Enter phone number\"\r\n");
      out.write("					name=\"phone\"><span id=\"phoneerror\" class=\"error\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"email\">*이메일 :</label> <input type=text\r\n");
      out.write("					class=\"form-control\" id=\"email\" placeholder=\"Enter email\"\r\n");
      out.write("					name=\"email\"><span id=\"emailerror\" class=\"error\"></span>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"confirmEmail\" style=\"display: none\">\r\n");
      out.write("					<br />\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-info\" id=\"sendMail\"\r\n");
      out.write("						onclick=\"sendMailCode();\">코드 전송</button>\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" id=\"emailConfrimCode\"\r\n");
      out.write("						placeholder=\"전송된 코드를 쓰세요\" style=\"width: 300px;\"\r\n");
      out.write("						name=\"emailConfrimCode\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-info\" id=\"confirmBtn\"\r\n");
      out.write("						onclick=\"confirmEmailCode();\">확인</button>\r\n");
      out.write("					<div id=\"emailError\" class=\"error\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- 			<button type=\"button\" class=\"btn btn-default\" id=\"checkInfo\" -->\r\n");
      out.write("			<!-- 				onclick=\"validate();\">확인</button> -->\r\n");
      out.write("			<button type=\"submit\" class=\"btn btn-primary btn-block\"\r\n");
      out.write("				onclick=\"return validate();\">회원가입</button>\r\n");
      out.write("			<!--  버튼 색 : success or primary  -->\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
